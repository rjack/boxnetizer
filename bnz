#!/usr/bin/env bash


#############################################################################
# Constants
#############################################################################

REQUIRED_TOOLS="gpg stat readlink lzma tar split"
MAX_UPLOAD_SIZE="9437184"


#############################################################################
# Variables
#############################################################################

src_path=
output_dir="/shared/tmp"
archive_path=


#############################################################################
# Functions
#############################################################################

function die
{
	echo -e "$@"
	exit 1
}


function usage
{
	die 	"usage:\n   $0 DIR\nor $0 FILE"
}


function die_if_missing_tools
{
	missing_tools=

	for i in $REQUIRED_TOOLS ; do
		which $i > /dev/null || missing_tools="$i $missing_tools"
	done

	[[ -n $missing_tools ]] && \
		die "These tools are missing: $missing_tools"
}


#############################################################################
# Script
#############################################################################

die_if_missing_tools

[[ -n $1 ]] || usage


# Create 7z archive

src_path=$(readlink -f $1)

if [[ -f $src_path || -d $src_path ]] ; then
	archive_path="${output_dir}/$(basename $src_path).tar.lzma.gpg"
else
	die "$src_path is not a dir nor a file"
fi


tar -cvf - $src_path | lzma -9 | gpg --default-recipient-self --output $archive_path --encrypt

if (( $(stat -c %s $archive_path) > $MAX_UPLOAD_SIZE )) ; then
	echo "splitting ${archive_path} ..."
	split -b $MAX_UPLOAD_SIZE $archive_path ${archive_path}-
	echo "done"
fi
